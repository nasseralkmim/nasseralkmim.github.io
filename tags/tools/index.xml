<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tools on Nasser&#39;s personal website</title>
    <link>https://nasseralkmim.github.io/tags/tools/</link>
    <description>Recent content in tools on Nasser&#39;s personal website</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>© {year}</copyright>
    <lastBuildDate>Sun, 18 Apr 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://nasseralkmim.github.io/tags/tools/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Trilinos notes</title>
      <link>https://nasseralkmim.github.io/notes/trilinos/</link>
      <pubDate>Sun, 18 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://nasseralkmim.github.io/notes/trilinos/</guid>
      <description>Basics  What is Trilinos?   Object oriented framework for solving math and engineering problems (linear system of equations). Can solve problems up to 2 billion unknowns.
  What packages make Trilinos?  Trilinos is made out of multiple packages. The packages can depend on each other.
 Documentation for each package can be found Packages | Trilinos.
 The packages are divided in core &amp;#34;services&amp;#34;, solvers, methods and discretization.</description>
    </item>
    
    <item>
      <title>C&#43;&#43; Development environment in Emacs</title>
      <link>https://nasseralkmim.github.io/notes/cpp-environment-setup/</link>
      <pubDate>Thu, 01 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://nasseralkmim.github.io/notes/cpp-environment-setup/</guid>
      <description>Introduction   This set up already starts with wsl (version 2) already installed and emacs as well. Emacs on windows with WSL2 | Nasser&amp;#39;s personal website
 This guide also is helpful to set up emacs for c++ development: Configuring Emacs as a C/C++ IDE - LSP Mode - LSP support for Emacs.
  Emacs  Lsp-mode clangd server   clangd is language server that provides intelligent features to emacs (client) via lsp-mode (client-server application).</description>
    </item>
    
    <item>
      <title>Emacs on windows with WSL2</title>
      <link>https://nasseralkmim.github.io/notes/emacs-windows/</link>
      <pubDate>Mon, 04 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://nasseralkmim.github.io/notes/emacs-windows/</guid>
      <description>Introduction   Build emacs inside windows subsystem for linux (wsl). The main advantage is that emacs is considerably faster when using LSP.
  Reference for installation   GitHub - hubisan/emacs-wsl: Install and run emacs with the Windows Subsystem …
  Shortcut   One .bat file that starts the vcxsrv is it nor already running and calls the power shell script that starts emacs. @echo off TASKLIST | FINDSTR vcxsrv || start &amp;#34;&amp;#34; &amp;#34;C:\Program Files\VcXsrv\vcxsrv.</description>
    </item>
    
  </channel>
</rss>
